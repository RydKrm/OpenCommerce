model Product {
  id            String   @id @default(cuid())
  name          String
  categoryId    String
  price         Float
  slug          String   @unique
  sku           String?
  previousPrice Float?   @map("previous_price")
  description   String
  quantity      Int
  isDeleted     Boolean  @default(false) @map("is_deleted")
  rating        Float    @default(0)
  totalSold     Int      @default(0) @map("total_sold")
  totalLike     Int      @default(0) @map("total_like")
  totalVisit    Int      @default(0) @map("total_visit")
  totalComment  Int      @default(0) @map("total_comment")
  status        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Category          Category            @relation(fields: [categoryId], references: [id])
  Comment           Comment[]
  Reaction          Reaction[]
  Reviews           Reviews[]
  Images            Images[]
  WishList          WishList[]
  Product_Inventory Product_Inventory[]
  Product_Variant   Product_Variant[]
  Product_Property  Product_Property[]
}

model Product_Variant {
  id            String   @id @default(cuid())
  productId     String
  price         Float
  previousPrice Float?   @map("previous_price")
  image         String?
  sku           String?
  quantity      Int
  status        Boolean  @default(true)
  createdAt     DateTime @default(now())

  Product          Product            @relation(fields: [productId], references: [id])
  Product_Property Product_Property[]

  @@map("product_variant")
}

model Product_Property {
  id        String  @id @default(cuid())
  productId String?
  variantId String?
  key       String
  value     String

  Product Product?         @relation(fields: [productId], references: [id])
  Variant Product_Variant? @relation(fields: [variantId], references: [id])

  @@map("product_property")
}

model Product_Inventory {
  id        String        @id @default(cuid())
  productId String        @db.VarChar(30)
  userId    String?       @db.VarChar(30)
  quantity  Int
  price     Int?
  type      InventoryType
  createdAt DateTime      @default(now())
  updateAt  DateTime      @updatedAt

  Product Product @relation(references: [id], fields: [productId])

  @@map("product_inventory")
}

enum InventoryType {
  incoming
  outgoing
}
